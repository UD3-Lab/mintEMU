---
title: "The Legacy of the European Post-Master in Urbanism at TU Delft: A Text Mining Approach"
author:
  - Jane Doe:
      correspondence: "yes"
      email: janedoe@fosg.org
      orcid: 0000-0003-1689-0557
      institute: tud
  - John Q. Doe:
      email: johndoe@fosg.org
      orcid: 0000-0003-1689-0558
      institute: tud
institute:
  - tud:
      name: Delft University of Technology
      address: Julianalaan 134, 2628 BL, Delft, Zuid-Holland, The Netherlands
title-block-published: "Last updated"  
date: now
date-format: long
format: 
  docx:
    reference-doc: "../templates/template.docx" # Insert path for the DOCX file
execute:
  echo: true
  warning: false
  message: false
  comment: "#>"
  fig-path: "../figures/"
  fig-dpi: 600
filters:
  - ../templates/scholarly-metadata.lua
  - ../templates/author-info-blocks.lua
  - ../templates/pagebreak.lua
bibliography: references.bib
csl: "../templates/journal-of-archaeological-science.csl" # Insert path for the bib-style
abstract: |
  Text of abstract
keywords: |
  urbanism; education; post-master; text mining
highlights: |
  These are the highlights. 
---

<!-- With the following code you can access and display values from the yml header above. -->

Keywords: `r rmarkdown::metadata$keywords`

Highlights: `r rmarkdown::metadata$highlights`

<!-- The actual document text starts here: -->

```{r}
#| label: setup
library(dplyr)
library(readr)
library(stringr)
devtools::load_all(".")


# read csv file with pages that are useful for the analysis
emu_theses <- read_csv(here::here("analysis","data", "raw_data", "emu-theses.csv")) %>%
  mutate(pdf_filename = paste0(year, "-", author_surname, ".pdf")) %>%
  mutate(text = "")

pdf_names <- dir("analysis/data/raw_data", pattern = "*.pdf")

emu_theses <- emu_theses %>%
  filter(pdf_filename %in% pdf_names)
  
pdf_paths<- here::here("analysis","data", "raw_data", emu_theses$pdf_filename)

emu_theses$text <- convert_pdf_text(pdf_paths)

# clean text 
  emu_theses$text_clean <- emu_theses$text %>%
    str_replace_all("\\s", " ") %>%  ### remove all carriage return and newline characters
    str_squish() %>%
    str_replace_all("- ", "") %>%       ### remove all hyphens
    str_replace_all("[0-9]", "") %>%    ### remove all numbers
    str_replace_all(emu_theses$author_firstname, "") %>%   ### remove author first name
    str_replace_all(emu_theses$author_surname, "") %>%     ### remove author surname
    str_replace_all(emu_theses$title, "") %>%              ### remove title
    # str_replace_all("Claudiu Forgaci", "") %>%
    # str_replace_all("Bucharest: Between North and South", "") %>%
    str_replace_all("EMU", "")          ### remove common words
```

# Introduction

The research presented in this paper was prompted by the closure of the European post-Master of Urbanism (EMU) of the Department of Urbanism at the Faculty of Architecture and the Built Environment, TU Delft. 
<!-- Complete paragraph about the program -->

In order to describe the legacy of the EMU program, including the distinctive features of the didactics employed in it, this paper aims to reveal the main topics taught in it and how those topics had evolved through the years of the program. To that end, we employed a text mining approach in which we analysed its output: 97 theses of 100+ pages each produced over the years for the entire duration of the program between 2007-2021.

# Methods

## Data collection
The theses are available in PDF format with complex layouts typical to an urbanism project in which text and various types of graphics are combined. 

## Data analysis

[@silge2017a]
[@hvitfeldt2021a]

# Results

```{r}
#| label: map-theses
#| warning: false 

# Create dummy data
location_names <- as.data.frame(c("Paris, France", "Bucharest, Romania", "Delft, The Netherlands"))

# Geocode

# Visualise thesis locations on world map
world <- map_data("world")
ggplot() +
  geom_map(
    data = world, map = world,
    aes(long, lat, map_id = region),
    color = "black", fill = "lightgray", size = 0.1
  )
```


<!-- Here's some example analysis code: -->

```{r}
#| label: get-data
#| eval: false
# Note the path that we need to use to access our data files when rendering this document
my_data <- read.csv(here::here('analysis/data/raw_data/my_csv_file.csv'))
```

```{r}
#| label: fig-demo-plot
#| fig-cap: "A plot of random numbers"
plot(rnorm(10))
```

Figure @fig-demo-plot shows how we can have a caption and cross-reference for a plot. Note that figure label and cross-references must both be prefixed with `fig-`

```{r}
#| label: demo-inline-code
#| echo: false
x <- round(pi, 2)
```

Here is an example of inline code `r x` in the middle of a sentence.

# Discussion

# Conclusion

# Acknowledgements

<!-- The following line inserts a page break  -->

\newpage

# References

<!-- The following line ensures the references appear here for the MS Word or HTML output files, rather than right at the end of the document (this will not work for PDF files):  -->

::: {#refs}
:::

\newpage

### Colophon

This report was generated on `r Sys.time()` using the following computational environment and dependencies:

```{r}
#| label: colophon
#| cache: false

# which R packages and versions?
if ("devtools" %in% installed.packages()) devtools::session_info()
```

The current Git commit details are:

```{r}
# what commit is this file at? 
if ("git2r" %in% installed.packages() & git2r::in_repository(path = ".")) git2r::repository(here::here())  
```
